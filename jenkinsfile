pipeline {
    agent any

    tools {
        jdk 'jdk21'
        nodejs 'node24'
    }
    environment {
        SONARQUBE_ENV = 'sonar-server' 
        SCANNER = 'sonar-scanner'   
    }
    stages {
        stage("Clean Workspace") {
            steps {
                cleanWs()
            }
        }

        stage("Git Checkout") {
            steps {
                git 'https://github.com/pradeeshan/Food-App.git'
            }
        }

        stage("Install NPM Dependencies") {
            steps {
                bat "npm install"
            }
        }

        stage("Test") {
            failFast true
            parallel {
                stage("Unit Tests") {
                    steps {
                        bat "npm run test:unit"
                    }
                }
                stage("Integration Tests") {
                    steps {
                        bat "npm run test:integration"
                    }
                }
            }
        }
        stage("SonarQube Analysis") {
            steps {
                withSonarQubeEnv("${SONARQUBE_ENV}") {
                    bat "${SCANNER} -Dsonar.projectKey=zomato -Dsonar.sources=. -Dsonar.host.url=$SONAR_HOST_URL"
                }
            }
        }

        stage("Quality Gate") {
            steps {
                {
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token'
                }
            }
        }
        stage("Build Docker Image") {
            steps {
                bat "docker build -t zomato ."
            }
        }

        stage("Tag & Push to DockerHub") {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker') {
                        bat "docker tag zomato pradeeshan/zomato:latest"
                        bat "docker push pradeeshan/zomato:latest"
                    }
                }
            }
        }

        stage("Deploy to Container") {
            steps {
                script {
                    bat '''
                    docker stop zomato || echo "No container to stop"
                    docker rm zomato || echo "No container to remove"
                    '''
                    bat "docker run -d --name zomato -p 3000:3000 pradeeshan/zomato:latest"
                }
            }
        }
    }
}
